@node Yafc commands, Nohup transfers, , The shell
@section Yafc commands

All commands follow the usual GNU command line syntax,
with long options starting with two dashes (@samp{--}).

Most commands have an option @samp{--help} that shows a
short syntax description.

@menu
* !::                           execute shell command
* afslog::                      obtain remote AFS tokens
* alias::                       create an alias
* bookmark::                    create a bookmark
* cache::                       control directory cache
* cat::                         view a text file
* cd::                          change working directory
* cdup::                        change to parent directory
* chmod::                       change access mode (permissions) of files
* close::                       close connection
* copyright::                   show copyright notice
* filetime::                    print file modification time
* flush::                       flush replies
* fxp::                         transfer files between hosts
* get::                         get files
* help::                        don't panic
* idle::                        modify idle time
* kauth::                       authenticate to Kerberos
* kdestroy::                    destroy Kerberos tickets
* klist::                       list Kerberos tickets
* krbtkfile::                   specify Kerberos ticket file
* lcd::                         change local working directory
* list::                        show raw directory listing
* lpwd::                        print local working directory
* ls::                          show directory listing
* ltag::                        tag local files
* luntag::                      remove files from local taglist
* mkdir::                       create directory
* mv::                          move files
* nlist::                       show filename list
* nop::                         do nothing
* open::                        open a connection
* prot::                        change Kerberos data protection level
* put::                         put files
* pwd::                         print working directory
* quit::                        quit Yafc
* quote::                       send arbitrary FTP command
* reopen::                      reopen active connection
* rhelp::                       remote help
* rm::                          remove files
* rmdir::                       remove empty directory
* rstatus::                     show status
* set::                         show and set variables
* shell::                       execute local shell
* site::                        issue a site specific FTP command
* source::                      read a configuration file
* status::                      show local status
* switch::                      switch between open connections
* system::                      show type of system
* tag::                         tag files
* unalias::                     remove an alias
* untag::                       remove files from taglist
* url::                         print the current FTP url
* user::                        send new user information
* version::                     show Yafc version
* warranty::                    show lack of warranty
@end menu

@c -----------------------------------------------------
@node !
@subsection @code{!}
This is a synonym for the shell (@ref{shell}) command.

@c -----------------------------------------------------
@node afslog
@subsection @code{afslog}
Obtain remote AFS tokens.

@c -----------------------------------------------------
@node alias
@subsection @code{alias}
Define an alias.

@c -----------------------------------------------------
@node bookmark
@subsection @code{bookmark}
Handle bookmarks. If no options are given, the default action is to
create a bookmark for the current open connection. If no bookmark name is given
on the command line, the bookmark will be given an alias based upon the
hostname.

Usage:
@example
bookmark [options] [bookmark name ...]
@end example

Options:

@table @samp

@item -s[@var{FILE}]
@itemx --save[=@var{FILE}]
Save bookmarks in memory to file. If the optional parameter @var{FILE} is
omitted, save to default bookmarks file @file{@var{workdir}/bookmarks}.

@item -e
@itemx --edit
Start editor (found in $EDITOR environment variable) with your bookmarks file.

@item -r[@var{FILE}]
@itemx --read[=@var{FILE}]
Read bookmarks from bookmarks file, or file given by optional parameter
@var{FILE}.

@item -d
@itemx --delete
Delete bookmarks given as arguments to @code{bookmark}. The bookmarks file
will be rewritten.

@item -l
@itemx --list
List bookmarks in memory.

@item -u
@itemx --noupdate
Toggle the noupdate flag. If no bookmarks are specified on the command
line, only the current bookmark is affected. The bookmarks file will be
rewritten.

@item -h
@itemx --help
Show short syntax description.

@end table

@c -----------------------------------------------------
@node cache
@subsection @code{cache}

Control the directory cache.

Usage:
@example
cache [options] [directory ...]
@end example

Options:

@table @samp

@item  -c
@itemx --clear
Clear the whole directory cache.

@item  -l
@itemx --list
List the contents of the directory cache.

@item  -t
@itemx --touch
Remove the specified directories from the cache. If no directories are
given as arguments, the current directory is removed from the cache.

@item  -h
@itemx --help
Show a short help description.

@end table

@c -----------------------------------------------------
@node cat
@subsection @code{cat}
Print file(s) on standard output. By default, the files are transferred in
ascii mode (rewriting newlines). If you want to view binary files through
a filter (eg viewing a README.gz through gzip) you have to use option
@samp{--type=binary}.

Usage:
@example
cat [options] file ...
@end example

Options:

@table @samp

@item -t @var{TYPE}
@itemx --type=@var{TYPE}
Set transfer type. Valid values for @var{TYPE} is @var{ascii} or @var{binary}.

@item -h
@itemx --help
Show a short help description

@end table

@c -----------------------------------------------------
@node cd
@subsection @code{cd}
Change remote working directory.

Usage:
@example
cd [directory]
@end example

If no argument is given, @code{cd} changes to the home directory. The home
directory is the current directory when logged in.

If the argument is '-', @code{cd} changes to the previous working directory.

@c -----------------------------------------------------
@node cdup
@subsection @code{cdup}
Changes to parent directory. On UN*X systems, this is the same as @code{cd ..}.

@c -----------------------------------------------------
@node chmod
@subsection @code{chmod}
Change the permission mode of remote files.

Usage:
@example
chmod mode file ...
@end example

Mode must be given in octal representation (for example: 0644 is -rw-r---r---).

@c -----------------------------------------------------
@node close
@subsection @code{close}
Close active connection.

@c -----------------------------------------------------
@node copyright
@subsection @code{copyright}
Show copyright.

@c -----------------------------------------------------
@node filetime
@subsection @code{filetime}
documentation missing...

@c -----------------------------------------------------
@node flush
@subsection @code{flush}
documentation missing...

@c -----------------------------------------------------
@node fxp
@subsection @code{fxp}
Transfer files from one remote server to another remote server, bypassing
the client. This is done by setting up a passive mode connection on the
source host and using the obtained port for an active connection on the
target host. The source host is the current active host, the target host
must be specified using the @samp{--target=@var{HOST}} option.

This will not always work with all ftp servers, either because passive mode is
not supported on the source host, or because the target refuses the given port.
The target ftp server might refuse the port as a security policy. You might get
the error 'Illegal PORT Command' or 'Possible port theft'.

If the destination file already exists, and none of the options
@samp{--append}, @samp{--force}, @samp{--newer}, @samp{--resume},
@samp{--skip-existing} or @samp{--unique} is given, you will be prompted what
to do.

Usage:
@example
fxp [options] file ...
@end example

Options:

@table @samp

@item  -a
@itemx --append
Append if destination exists.

@item -D
@itemx --delete-after
Delete remote file after successful transfer.

@item --dir-mask=@var{GLOB}
Enter only directories matching GLOB pattern.

@item --dir-rx-mask=@var{REGEXP}
Enter only directories matching REGEXP pattern.

@item -e
@itemx --skip-empty
Skip empty files (files with a size of zero bytes).

@item -f
@itemx --force
Overwrite existing destinations, never prompt.

@item -H
@itemx --nohup
Transfer files in background (nohup mode), quits yafc.

@item -i
@itemx --interactive
Prompt before each transfer.

@item -L @var{FILE}
@itemx --logfile=@var{FILE}
Use @var{FILE} as logfile instead of @file{~/.yafc/nohup/nohup.<pid>}.

@item -m @var{GLOB}
@itemx --mask=@var{GLOB}
Only transfer files matching GLOB pattern.

@item -M @var{REGEXP}
@itemx --rx-mask=@var{REGEXP}
Only transfer files matching REGEXP pattern.

@item -n
@itemx --newer
Only transfer file if remote is newer than local file.

@item -o @var{DEST}
@itemx --output=@var{DEST}
Specify other destination. If more than one file is transferred, or option
@samp{--recursive} is given, @var{DEST} denotes a directory. Otherwise (if only
one file is to be transferred), @var{DEST} denotes a filename.

Examples:
@example
fxp --target=2 foo.tar.gz -o bar.tar.gz
@end example
will transfer the remote file @file{foo.tar.gz} on the currently active remote
server to the remote file @file{bar.tar.gz} on the remote server specified
with the @samp{--target} option (in this case the second open connection).

@example
fxp --target=funet *.tar.gz -o foo
@end example
will transfer all remote @file{*.tar.gz} files to a directory named
@file{foo} on the host specified with the @samp{--target} option (in this case
'funet').

@example
fxp -T ftp.stacken.kth.se foo -r -o bar
@end example
will transfer the remote file @file{foo} to a directory named @file{bar} on
ftp.stacken.kth.se.
If @file{foo} is a directory, it will be downloaded recursively.

@item -p
@itemx --preserve
Try to preserve file attributes.

@item -P
@itemx --parents
Append source path to destination.

@item -q
@itemx --quiet
Overrides @samp{--verbose}.

@item -r
@itemx --recursive
Transfer directories recursively.

@item -R
@itemx --resume
Resume broken download (restart at EOF).

@item -s
@itemx --skip-existing
Always skip existing files.

@item -t
@itemx --tagged
Transfer tagged files.

@item -T @var{HOST}
@itemx --target=@var{HOST}
This option is required and specifies which remote server is the target.
The @var{HOST} parameter can be a complete hostname, an alias or the connection
number. The connection number is 1 for the first open connection, 2 for the
second and so on. It might be useful to include that information in the prompt
using the @samp{%C} code, @xref{Prompt codes}.

@item --type=@var{TYPE}
Specify transfer type, 'ascii' or 'binary'.

@item -u
@itemx --unique
Always store as unique target file.

@item -v
@itemx --verbose
Explain what is being done.

@item --help
Show a short syntax description.

@end table

@c -----------------------------------------------------
@node get
@subsection @code{get}

Transfer files from remote server to local computer.

If the destination file already exists, and none of the options
@samp{--append}, @samp{--force}, @samp{--newer}, @samp{--resume},
@samp{--skip-existing} or @samp{--unique} is given, you will be prompted what
to do.

Usage:
@example
get [options] file ...
@end example

Options:

@table @samp

@item  -a
@itemx --append
Append if destination exists.

@item -c @var{PERM}
@itemx --chmod=@var{PERM}
Change mode of transferred files to PERM.

@item --chgrp=@var{GROUP}
change group of transferred files to GROUP.
You need to be a member of GROUP.

@item -d
@itemx --no-dereference
Copy symbolic links as symbolic links.

@item -D
@itemx --delete-after
Delete remote file after successful transfer.

@item -e
@itemx --skip-empty
Skip empty files (files with a size of zero bytes).

@item --dir-mask=@var{GLOB}
Enter only directories matching GLOB pattern.

@item --dir-rx-mask=@var{REGEXP}
Enter only directories matching REGEXP pattern.

@item -f
@itemx --force
Overwrite existing destinations, never prompt.

@item -H
@itemx --nohup
Transfer files in background (nohup mode), quits yafc.

@item -i
@itemx --interactive
Prompt before each transfer.

@item -L @var{FILE}
@itemx --logfile=@var{FILE}
Use @var{FILE} as logfile instead of @file{~/.yafc/nohup/nohup.<pid>}.

@item -m @var{GLOB}
@itemx --mask=@var{GLOB}
Only get files matching GLOB pattern.

@item -M @var{REGEXP}
@itemx --rx-mask=@var{REGEXP}
Only get files matching REGEXP pattern.

@item -n
@itemx --newer
Only get file if remote is newer than local file.

@item -o @var{DEST}
@itemx --output=@var{DEST}
Specify other destination. If more than one file is transferred,
option @samp{--recursive} is given, or @var{DEST} ends in a slash,
then @var{DEST} denotes a directory. Otherwise (if only one file is to
be transferred), @var{DEST} denotes a filename. However, if @var{DEST}
already exists and is a directory, @var{DEST} denotes a directory.

Examples:
@example
get README -o readme
@end example
will transfer the remote file @file{README} to the local file
@file{readme} if @file{readme} is not an existing local directory.

@example
get README -o readme/
@end example
will transfer the remote file @file{README} to the local directory
@file{readme}.

@example
get *.tar.gz -o foo
@end example
will transfer all remote @file{*.tar.gz} files to a local directory named
@file{foo}.

@example
get foo -r -o bar
@end example
will transfer the remote file @file{foo} to a local directory named @file{bar}.
If @file{foo} is a directory, it will be downloaded recursively.

@item -p
@itemx --preserve
Try to preserve file attributes and timestamps.

@item -P
@itemx --parents
Append source path to destination.

@item -q
@itemx --quiet
Overrides @samp{--verbose}.

@item -r
@itemx --recursive
Get directories recursively.

@item -R
@itemx --resume
Resume broken download (restart at EOF).

@item -s
@itemx --skip-existing
Always skip existing files.

@item -t
@itemx --tagged
Transfer tagged files.

@item --type=@var{TYPE}
Specify transfer type, 'ascii' or 'binary'.

@item -u
@itemx --unique
Always store as unique local file.

@item -v
@itemx --verbose
Explain what is being done.

@item --help
Show a short syntax description.

@end table

@c -----------------------------------------------------
@node help
@subsection @code{help}
Shows the available commands.

@c -----------------------------------------------------
@node idle
@subsection @code{idle}
Show or set the idle timeout.

@c -----------------------------------------------------
@node kauth
@subsection @code{kauth}
Authenticate to Kerberos.

@c -----------------------------------------------------
@node kdestroy
@subsection @code{kdestroy}
Destroy Kerberos tickets.

@c -----------------------------------------------------
@node klist
@subsection @code{klist}
Show Kerberos tickets.

@c -----------------------------------------------------
@node krbtkfile
@subsection @code{krbtkfile}
Set file used for Kerberos tickets.

@c -----------------------------------------------------
@node lcd
@subsection @code{lcd}
Change local working directory.

@c -----------------------------------------------------
@node list
@subsection @code{list}
List files.

@c -----------------------------------------------------
@node lpwd
@subsection @code{lpwd}
Print local working directory.

@c -----------------------------------------------------
@node ls
@subsection @code{ls}
List files.

Usage:
@example
ls [options] [files ...]
@end example

Options:

@table @samp

@item -a
@itemx --all
Do not hide entries starting with '.'.

@item -A
@itemx --almost-all
As @samp{--all}, but do not list . and ..

@item -B
@itemx --ignore-backups
Do not list implied entries ending with ~.

@item -C
List entries by columns.

@item --color[=@var{WHEN}]
Control whether color is used to distinguish file types. @var{WHEN} may be
either @var{never}, @var{always} or @var{auto}. If @var{WHEN} is not given,
default is @var{always}. If the argument is @var{auto}, colors will be used
only if output is bound to a tty.

@item -d
@itemx --directory
List directory entries instead of contents.

@item --dirs-first
Show directories first (last with @samp{--reverse}).

@item -F
@itemx --classify
Append a character for typing each entry.

@item -g
Ignored.

@item -G
@itemx --no-group
Inhibit display of group information.

@item -h
@itemx --human-readable
Print sizes in human readable format (e.g. 1K, 234M, 2G)

@item -l
Use a long listing format.

@item -N
@itemx --literal
Print raw entry names (don't treat control characters specially)

@item -o
Use a long listing format without group info. Same as @samp{-lG}.

@item -r
@itemx --reverse
Reverse order while sorting.

@item -R
@itemx --recursive
List subdirectories recursively.

@item -S
Sort by file size

@item -t
Sort by modification time.

@item -U
Do not sort; list entries in directory order.

@item -x
List entries by lines instead of by columns.

@item -X
Sort alphabetically by entry extension.

@item -1
List one file per line.

@item --help
Show a short syntax description.

@end table

@c -----------------------------------------------------
@node ltag
@subsection @code{ltag}
Tag local files.

@c -----------------------------------------------------
@node luntag
@subsection @code{luntag}
Untag local files.

@c -----------------------------------------------------
@node mkdir
@subsection @code{mkdir}
Creates a remote directory (requires proper permissions.)

Usage:
@example
mkdir directory
@end example

@c -----------------------------------------------------
@node mv
@subsection @code{mv}
Documentation missing...

@c -----------------------------------------------------
@node nlist
@subsection @code{nlist}
Documentation missing...

@c -----------------------------------------------------
@node nop
@subsection @code{nop}
Send a NOOP command to remote host. This does nothing except checking if the
connection is still open. It may be used to reset the servers idle
timeout (though some servers ignore it).

@c -----------------------------------------------------
@node open
@subsection @code{open}

Opens a new connection to an FTP/SSH server.

Usage:  open [options]
[proto://][user[:password]@@]hostname[:port][/directory] ...

proto can be either 'ftp' or 'ssh' ('sftp' is an alias for 'ssh')

Options:

@table @samp

@item -a
@itemx --anon
Try to login anonymously.

@item -u
@itemx --noauto
Disable autologin.

@item -U
@itemx --noalias
Disable bookmark alias lookup and abbreviation.

@item -m @var{MECH}
@itemx --mechanism=@var{MECH}
Try security mechanism @var{MECH} when logging in. This will override any
'mech' options in @file{yafcrc} or @file{bookmarks}. @var{MECH} is a
colon-separated string, supported values are "krb4", "krb5" and "none". The
mechanisms are tried in the order specified.

@item -s @var{PATH}
@itemx --sftp=@var{PATH}
Specify path to the remote sftp-server program. SSH starts this
program on the remote side when initiating an sftp connection. This
option is only necessary if the remote ssh server doesn't understand
the sftp subsystem.

Specify @samp{--sftp=""} to disable the sftp-server path, and use sftp
subsystem instead.

If you don't know the remote path to the sftp-server program, the
default for OpenSSH is @file{/usr/libexec/sftp-server}. Another common
path is @file{/usr/bin/sftp-server}.


@item --help
Show a short syntax description.

@end table

@c -----------------------------------------------------
@node prot
@subsection @code{prot}

Changes the data protection level for data transfers. The
protection level defines how data transfers are handled
by the security mechanism.

Usage:
@example
prot [options] [command | data] protlevel
@end example

Options:

@table @samp
@item -h
@item --help
Show short syntax description.
@end table

Valid protection levels are:

@table @code

@item clear
no data protection

@item safe
integrity check

@item private
all data encrypted and integrity checked

@end table

@c -----------------------------------------------------
@node put
@subsection @code{put}
Send files to remote computer.

If the destination file already exists, and none of the options
@samp{--append}, @samp{--force}, @samp{--newer}, @samp{--resume},
@samp{--skip-existing} or @samp{--unique} is given, you will be prompted what
to do.

Usage:
@example
put [options] file ...
@end example

Options:

@table @samp

@item  -a
@itemx --append
Append if destination file exists.

@item -D
@itemx --delete-after
Delete local file after successful transfer.

@item --dir-mask=@var{GLOB}
Enter only directories matching GLOB pattern.

@item --dir-rx-mask=@var{REGEXP}
Enter only directories matching REGEXP pattern.

@item -e
@itemx --skip-empty
Skip empty files (files with a size of zero bytes).

@item -f
@itemx --force
Overwrite existing destinations, never prompt.

@item -H
@itemx --nohup
Transfer files in background (nohup mode), quits yafc.

@item -i
@itemx --interactive
Prompt before transferring each file.

@item -L @var{FILE}
@itemx --logfile=@var{FILE}
Use @var{FILE} as logfile instead of @file{~/.yafc/nohup/nohup.<pid>} for
nohup transfers.

@item -m @var{GLOB}
@itemx --mask=@var{GLOB}
Only put files matching GLOB pattern.

@item -M @var{REGEXP}
@itemx --rx-mask=@var{REGEXP}
Only put files matching REGEXP pattern.

@item -n
@itemx --newer
Only transfer file if local is newer than remote file.

@item -o @var{DEST}
@itemx --output=@var{DEST}
Specify other destination. If more than one file is transferred, or option
@samp{--recursive} is given, @var{DEST} denotes a directory. Otherwise (if only
one file is to be transferred), @var{DEST} denotes a filename.

Examples:
@example
put foo.tar.gz -o bar.tar.gz
@end example
will transfer the local file @file{foo.tar.gz} to the remote file
@file{bar.tar.gz}.

@example
put *.tar.gz -o foo
@end example
will transfer all local @file{*.tar.gz} files to a remote directory named
@file{foo}.

@example
put foo -r -o bar
@end example
will transfer the local file @file{foo} to a remote directory named @file{bar}.
If @file{foo} is a directory, it will be uploaded recursively.

@item -p
@itemx --preserve
Try to preserve file attributes (permissions).

@item -P
@itemx --parents
Append source path to destination.

@item -q
@itemx --quiet
Overrides @samp{--verbose}.

@item -r
@itemx --recursive
Upload directories recursively.

@item -R
@itemx --resume
Resume broken transfer (restart at EOF).

@item -s
@itemx --skip-existing
Always skip existing files.

@item -t
@itemx --tagged
Transfer (locally) tagged files.

@item --type=@var{TYPE}
Specify transfer type, 'ascii' or 'binary'.

@item -u
@itemx --unique
Always store as unique file (if server supports the STOU command).

@item -v
@itemx --verbose
Explain what is being done.

@item --help
Show a short syntax description.

@end table

@c -----------------------------------------------------
@node pwd
@subsection @code{pwd}

Prints the current remote working directory.

Usage: @code{pwd}

@c -----------------------------------------------------
@node quit
@subsection @code{quit}
Quit yafc.

You can also use the alias @code{exit}.

Usage: @code{quit}

@c -----------------------------------------------------
@node quote
@subsection @code{quote}
documentation missing...

@c -----------------------------------------------------
@node reopen
@subsection @code{reopen}

Reopen a timed out connection.

@c -----------------------------------------------------
@node rhelp
@subsection @code{rhelp}
documentation missing...

@c -----------------------------------------------------
@node rm
@subsection @code{rm}

Remove files on remote server.

Usage: @code{rm [options] file...}

Options:

@table @samp

@item -f
@itemx --force
never prompt

@item -i
@itemx --interactive
prompt before any removal

@item -r
@itemx --recursive
remove the contents of directories recursively. CAREFUL!

@item -t
@itemx --tagged
remove tagged files

@item -v
@itemx --verbose
explain what is being done

@item --help
display help

@end table

@c -----------------------------------------------------
@node rmdir
@subsection @code{rmdir}
Remove a directory on the remote server

@example
rmdir docs
@end example

You can also use recursive @ref{rm} to achive the same result

@c -----------------------------------------------------
@node rstatus
@subsection @code{rstatus}
documentation missing...

@c -----------------------------------------------------
@node set
@subsection @code{set}
documentation missing...

@c -----------------------------------------------------
@node shell
@subsection @code{shell}
Executes a command on the local machine. You can also use the very useful alias @code{!}.

If provided with no arguments, drops into an interactive shell session.

If provided with arguments, executes the specified command and then returns to yafc.

Example:

@example
! cat document.txt
@end example

The shell also supports argument replacement for various yafc variables.

Supported variables:

@table @samp

@item  %h
The current hostname (e.g. "ftp.foo.bar")

@item  %p
The current port number (e.g. 21)

@item  %u
The current username (e.g. "fred")

@item  %d
The current remote directory (e.g. "/home/fred/")

@end table

At this time, substitution is only supported for a whole argument.

Works:

@example
! ssh %h
@end example

Doesn't work:

@example
! ssh %u@@%h
@end example

@c -----------------------------------------------------
@node site
@subsection @code{site}
Send site specific command.

Usage:

@example
site command
@end example

Try @code{site help} or @code{rhelp site} for more information

@c -----------------------------------------------------
@node source
@subsection @code{source}
documentation missing...

@c -----------------------------------------------------
@node status
@subsection @code{status}
documentation missing...

@c -----------------------------------------------------
@node switch
@subsection @code{switch}
Switch between open connections.

Usage:
@example
switch [options] [connection]
@end example

Options:

@table @samp
@item -h
@itemx --help
Show short syntax description.
@end table

The connection argument specifies which connection to switch to. It can be
specified either as the connection number or with the name (hostname or alias).

If no argument is given, switch to the next open connection.

@c -----------------------------------------------------
@node system
@subsection @code{system}
Show the type of the remote system.

@c -----------------------------------------------------
@node tag
@subsection @code{tag}
Tag files for later transferring or removal.

Usage:
@example
tag [options] file ...
@end example

Options:

@table @samp

@item -c
@itemx --clear
Clear the taglist.

@item -i
@itemx --info
Show some information about the tagged files. This includes the total
size of all tagged file, how many files and how many directories are tagged.

@item -l
@item --list
List tagged files.

@item -L[@var{FILE}]
@itemx --load[=@var{FILE}]
Load saved taglist file. If optional parameter @var{FILE} is omitted, the
taglist for this host is loaded (from the file
@file{@var{workdir}/taglist.@var{hostname}}).

@item -s[@var{FILE}]
@itemx --save[=@var{FILE}]
Save taglist to file. If optional parameter @var{fILE} is omitted, the
taglist is saved in the default file
@file{@var{workdir}/taglist.@var{hostname}}.

@item -h
@itemx --help
Show short syntax description.

@end table

@c -----------------------------------------------------
@node unalias
@subsection @code{unalias}
documentation missing...

@c -----------------------------------------------------
@node untag
@subsection @code{untag}
documentation missing...

@c -----------------------------------------------------
@node url
@subsection @code{url}
Show the current URL.

Usage:
@example
url [options]
@end example

Options:

@table @samp

@item -e
@itemx --no-encoding
Don't encode the URL as RFC1738 says.

@item -h
@itemx --help
Show short syntax description.

@end table

@c -----------------------------------------------------
@node user
@subsection @code{user}
Send new user information.

@c -----------------------------------------------------
@node version
@subsection @code{version}
Shows the version of yafc, and compilation information

@c -----------------------------------------------------
@node warranty
@subsection @code{warranty}
Shows the yafc warranty.
